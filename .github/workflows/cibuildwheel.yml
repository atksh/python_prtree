name: Build and upload to PyPI

on:
  push:
    branches:
      - main
    tags:
      - v*

  pull_request:
    branches:
      - main

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      # Ensure that a wheel builder finishes even if another fails
      fail-fast: false
      matrix:
        include:
          # Window 64 bit
          # Note: windows-2019 is needed for older Python versions:
          # https://github.com/scikit-learn/scikit-learn/issues/22530
          - os: windows-2019
            python: 36
            platform_id: win_amd64
          - os: windows-2019
            python: 37
            platform_id: win_amd64
          - os: windows-2019
            python: 38
            platform_id: win_amd64
          - os: windows-latest
            python: 39
            platform_id: win_amd64
          - os: windows-latest
            python: 310
            platform_id: win_amd64

          # Linux 64 bit manylinux2014
          - os: ubuntu-latest
            python: 36
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 37
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 38
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 39
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 310
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014

          # Linux 64 bit aarch64
          - os: ubuntu-latest
            python: 36
            platform_id: manylinux_aarch64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 37
            platform_id: manylinux_aarch64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 38
            platform_id: manylinux_aarch64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 39
            platform_id: manylinux_aarch64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 310
            platform_id: manylinux_aarch64
            manylinux_image: manylinux2014

          # MacOS x86_64
          - os: macos-latest
            python: 36
            platform_id: macosx_x86_64
            macosx_deployment_target: 10.14
          - os: macos-latest
            python: 37
            platform_id: macosx_x86_64
            macosx_deployment_target: 10.14
          - os: macos-latest
            python: 38
            platform_id: macosx_x86_64
            macosx_deployment_target: 10.14
          - os: macos-latest
            python: 39
            platform_id: macosx_x86_64
            macosx_deployment_target: 10.14
          - os: macos-latest
            python: 310
            platform_id: macosx_x86_64
            macosx_deployment_target: 10.14

          # MacOS arm64
          - os: macos-latest
            python: 38
            platform_id: macosx_arm64
            macosx_deployment_target: 11.0
          - os: macos-latest
            python: 39
            platform_id: macosx_arm64
            macosx_deployment_target: 11.0
          - os: macos-latest
            python: 310
            platform_id: macosx_arm64
            macosx_deployment_target: 11.0

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: 3.9
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.4.0
        env:
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux_image }}
          CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.manylinux_image }}
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
          CIBW_ARCHS: all
          CIBW_TEST_SKIP: "*-macosx_arm64"
          CIBW_BEFORE_BUILD: pip install pybind11
          CIBW_TEST_COMMAND: pytest {project}/tests -vv
          CIBW_TEST_REQUIRES: pytest numpy
          CIBW_BUILD_VERBOSITY: 1
          MACOSX_DEPLOYMENT_TARGET: ${{ matrix.macosx_deployment_target }}
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: 3.9
      - name: Build sdist
        run: python setup.py sdist
      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
