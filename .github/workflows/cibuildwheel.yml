name: Build and upload to PyPI

on:
  push:
    branches:
      - main
    tags:
      - v*

  pull_request:
    branches:
      - main

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: 3.8
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.0.0
        env:
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_BUILD: cp3?-*
          CIBW_SKIP: cp27-* cp35-* *-win32 *-manylinux_i686
          CIBW_ARCHS_LINUX: x86_64 aarch64
          CIBW_ARCHS_MACOS: x86_64
          CIBW_BEFORE_BUILD: pip install pybind11
          # zlib
          CIBW_BEFORE_BUILD_LINUX: yum install zlib zlib-devel
          CIBW_BEFORE_BUILD_WINDOWS: powershell -Command "(New-Object Net.WebClient).DownloadFile('https://git.io/JnHTY')"; ./install_zlib.bat; del install_zlib.bat
          CIBW_TEST_COMMAND: pytest {project}/tests
          CIBW_TEST_REQUIRES: pytest numpy
          MACOSX_DEPLOYMENT_TARGET: 10.15
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: 3.8
      - name: Build sdist
        run: python setup.py sdist
      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
